{"ast":null,"code":"import axios from 'axios';\nimport { API_URL, LOCAL_STORAGE_KEY } from './config';\nconst initStorage = () => {\n  if (localStorage.getItem(LOCAL_STORAGE_KEY)) return;\n  const messages = [{\n    \"role\": \"system\",\n    \"content\": \"You are a helpful assistant.\"\n  }];\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(messages));\n};\nconst updateLocalStorage = (content, role) => {\n  const newMessage = {\n    role,\n    content\n  };\n  const messages = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || [];\n  messages.push(newMessage);\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(messages));\n  console.log(`Reading local storage: ${localStorage.getItem(LOCAL_STORAGE_KEY)}`);\n};\nconst clearLocalStorage = () => {\n  localStorage.removeItem(LOCAL_STORAGE_KEY);\n};\nconst getMessageHistory = () => {\n  return JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n};\nconst sendInput = async (fileMode = false) => {\n  try {\n    const messages = localStorage.getItem(LOCAL_STORAGE_KEY);\n\n    // making api call\n    const url = fileMode ? `${API_URL}/llm/file` : `${API_URL}/llm`;\n    const {\n      data,\n      status\n    } = await axios.post(url, messages, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (status !== 200) {\n      return \"No results found!\";\n    }\n\n    // set system messages in storage\n    updateLocalStorage(data, \"assistant\");\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n  ;\n};\nconst sendFileInput = async (files, prompt = \"\") => {\n  try {\n    const formData = new FormData();\n    formData.append(\"prompt\", prompt);\n    formData.append(\"files\", files[0]);\n\n    // making api call\n    const {\n      data,\n      status\n    } = await axios.post(`${API_URL}/llm/file`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    if (status !== 200) {\n      return \"No results found!\";\n    }\n    // set system messages in storage\n    updateLocalStorage(data, \"assistant\");\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n  ;\n};\nexport { initStorage, sendInput, sendFileInput, updateLocalStorage, getMessageHistory, clearLocalStorage };","map":{"version":3,"names":["axios","API_URL","LOCAL_STORAGE_KEY","initStorage","localStorage","getItem","messages","setItem","JSON","stringify","updateLocalStorage","content","role","newMessage","parse","push","console","log","clearLocalStorage","removeItem","getMessageHistory","sendInput","fileMode","url","data","status","post","headers","error","sendFileInput","files","prompt","formData","FormData","append"],"sources":["/Users/nivedhabalakrishnan/Desktop/Hands-On/llm-fe/src/services/service.js"],"sourcesContent":["import axios from 'axios';\nimport { API_URL, LOCAL_STORAGE_KEY } from './config';\n    \nconst initStorage = () => {\n    if(localStorage.getItem(LOCAL_STORAGE_KEY)) return;\n\n    const messages = [{\"role\": \"system\", \"content\": \"You are a helpful assistant.\"}];\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(messages));\n}\n\nconst updateLocalStorage = (content, role) => {\n    const newMessage = {\n        role,\n        content\n    }\n    const messages = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || [];\n    messages.push(newMessage);\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(messages));\n    console.log(`Reading local storage: ${localStorage.getItem(LOCAL_STORAGE_KEY)}`);\n}\n\nconst clearLocalStorage = () => {\n    localStorage.removeItem(LOCAL_STORAGE_KEY);\n}\n\nconst getMessageHistory = () => {\n    return JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n}\n\nconst sendInput = async (fileMode = false) => {\n    try {\n         const messages = localStorage.getItem(LOCAL_STORAGE_KEY);\n\n         // making api call\n         const url = fileMode ? `${API_URL}/llm/file` : `${API_URL}/llm`;\n\n         const {data, status} = await axios.post(url, messages, {\n            headers: {\n                'Content-Type': 'application/json'\n              }\n         });\n\n         if(status !== 200) {\n            return \"No results found!\"\n         }\n         \n         // set system messages in storage\n         updateLocalStorage(data, \"assistant\");\n         return data;\n    } \n    catch(error) {\n        console.log(error);\n    };\n}\n\nconst sendFileInput = async (files, prompt = \"\") => {\n    try {\n        const formData = new FormData();\n        formData.append(\"prompt\", prompt);\n        formData.append(\"files\", files[0]);\n\n         // making api call\n         const {data, status} = await axios.post(`${API_URL}/llm/file`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n         });\n\n         if(status !== 200) {\n            return \"No results found!\"\n         }\n         // set system messages in storage\n         updateLocalStorage(data, \"assistant\");\n         return data;\n    } \n    catch(error) {\n        console.log(error);\n    };\n}\n\nexport {\n    initStorage, \n    sendInput,\n    sendFileInput,\n    updateLocalStorage,\n    getMessageHistory,\n    clearLocalStorage\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}